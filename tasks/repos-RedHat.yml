---
- name: Check if repo package for "{{ item.name }}" is installed
  yum:
    list="{{ item.package_name }}"
  register: is_installed
  # when:
  #   - item.repo_install == True

- name: debug repo_status
  debug: msg="{{ is_installed.results|selectattr("yumstate", "match", "installed")|list|length }}"
  tags: [ 'debug' ]

- name: "Installing repo for {{ item.repo_name }}"
  yum:
    name: "{{ item.repo_rpm }}"
    state: present
    update_cache: yes
  ignore_errors: "{{ ansible_check_mode }}"
  when:
    - is_installed.results|selectattr("yumstate", "match", "installed")|list|length == 0
    - item.repo_install == True

- name: Set fact if repo is installed
  set_fact: "repo_{{ item.name }} = True"
  when:
    - is_installed.results|selectattr("yumstate", "match", "installed")|list|length == 0
    - item.repo_install == True

- name: "Install GPG key for repo {{ item.name }}"
  rpm_key:
    key: "{{ item.gpg_key_url }}"
    state: present
  ignore_errors: "{{ ansible_check_mode }}"
  when:
    - item.gpg_key_url is defined
    - item.repo_install == True

- name: "Enable repo {{ item.name }}"
  yum_repository:
    name: "{{ item.repo_name }}"
    enabled: yes
  ignore_errors: "{{ ansible_check_mode }}"
  when:
    - ( item.repo_enable == True ) or ( is_installed == True )
    - ( item.base_url defined ) or ( item.mirror_list defined )

- name: "Enable GPG check for repo {{ item.name }}"
  yum_repository:
    name: "{{ item.repo_name }}"
    gpgcheck: yes
    gpgkey: "{{ item.gpg_key_url }}"
  ignore_errors: "{{ ansible_check_mode }}"
  when: ( item.gpg_key_url is defined and item.repo_enable == True ) or ( is_installed == True )
  # when:
  #   - is_installed == True
  #   - item.gpg_key_url is defined

- name: "Debug fact repo_{{ item.name }}"
  debug: msg="repo_{{ item.name }}"

- include:
    packages-ius.yml
  when:
    - install_ius_repo == True
    # - item.name == "ius"
    # - item.repo_enable == True
    # - is_installed.results|selectattr("yumstate", "match", "installed")|list|length == 1

- include:
    packages-elrepo.yml
  when:
    - item.name == "elrepo"
    - item.repo_enable == True
    # - is_installed.results|selectattr("yumstate", "match", "installed")|list|length == 1
